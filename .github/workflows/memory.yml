name: NDK Build (r27)

on:
  push:
  pull_request:

env:
  NDK_VERSION: r27
  NDK_INSTALL_DIR: ${{ github.workspace }}/android-ndk-r27

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # 缓存 NDK
      - name: Cache NDK
        id: cache-ndk
        uses: actions/cache@v4
        with:
          path: ${{ env.NDK_INSTALL_DIR }}
          key: ndk-${{ env.NDK_VERSION }}-linux

      # 仅在缓存未命中时下载并解压
      - name: Install Android NDK
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        run: |
          echo "Downloading NDK ${{ env.NDK_VERSION }} ..."
          wget -q https://dl.google.com/android/repository/android-ndk-${{ env.NDK_VERSION }}-linux.zip
          unzip -q android-ndk-${{ env.NDK_VERSION }}-linux.zip -d /tmp
          mv /tmp/android-ndk-${{ env.NDK_VERSION }} ${{ env.NDK_INSTALL_DIR }}
          rm android-ndk-${{ env.NDK_VERSION }}-linux.zip

      # 把源码拷到 build 目录（保持目录结构）
      - name: Prepare build directory
        run: |
          mkdir -p build
          # 把当前目录除 build 外的内容复制过去
          rsync -a --exclude='build' . build/

      # 配置环境变量并执行 ndk-build
      - name: Run ndk-build
        run: |
          export ANDROID_NDK_HOME=${{ env.NDK_INSTALL_DIR }}
          export PATH=$ANDROID_NDK_HOME:$PATH
          cd build
          $ANDROID_NDK_HOME/ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=./Android.mk NDK_APPLICATION_MK=./Application.mk

      # 可选：把产物上传
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ndk-build-output
          path: build/libs
